<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.upc.hyz.dao.ViewGroupUser2Mapper">
  <resultMap id="BaseResultMap" type="cn.edu.upc.hyz.model.ViewGroupUser2">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Apr 05 17:16:10 CST 2020.
    -->
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="group_name" jdbcType="VARCHAR" property="groupName" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_type" jdbcType="TINYINT" property="userType" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="del_flag" jdbcType="INTEGER" property="delFlag" />
    <result column="group_user_id" jdbcType="INTEGER" property="groupUserId" />
  </resultMap>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Apr 05 17:16:10 CST 2020.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <insert id="insert" parameterType="cn.edu.upc.hyz.model.ViewGroupUser2">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Apr 05 17:16:10 CST 2020.
    -->
    insert into view_group_user2 (id, project_id, group_name, 
      user_id, user_type, real_name, 
      content, del_flag, group_user_id
      )
    values (#{id,jdbcType=INTEGER}, #{projectId,jdbcType=INTEGER}, #{groupName,jdbcType=VARCHAR}, 
      #{userId,jdbcType=INTEGER}, #{userType,jdbcType=TINYINT}, #{realName,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{delFlag,jdbcType=INTEGER}, #{groupUserId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.upc.hyz.model.ViewGroupUser2">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Apr 05 17:16:10 CST 2020.
    -->
    insert into view_group_user2
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="groupName != null">
        group_name,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
      <if test="groupUserId != null">
        group_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="groupName != null">
        #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=TINYINT},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="groupUserId != null">
        #{groupUserId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Apr 05 17:16:10 CST 2020.
    -->
    update view_group_user2
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=INTEGER},
      </if>
      <if test="record.groupName != null">
        group_name = #{record.groupName,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userType != null">
        user_type = #{record.userType,jdbcType=TINYINT},
      </if>
      <if test="record.realName != null">
        real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.delFlag != null">
        del_flag = #{record.delFlag,jdbcType=INTEGER},
      </if>
      <if test="record.groupUserId != null">
        group_user_id = #{record.groupUserId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Apr 05 17:16:10 CST 2020.
    -->
    update view_group_user2
    set id = #{record.id,jdbcType=INTEGER},
      project_id = #{record.projectId,jdbcType=INTEGER},
      group_name = #{record.groupName,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      user_type = #{record.userType,jdbcType=TINYINT},
      real_name = #{record.realName,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      del_flag = #{record.delFlag,jdbcType=INTEGER},
      group_user_id = #{record.groupUserId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="getGroupPerson"   parameterType="java.lang.Integer"   resultMap="BaseResultMap">
        SELECT distinct id,project_id,group_name FROM  view_group_user2
        where project_id=#{projectId} and del_flag=0
  </select>
  <select id="getGroupPersonType"   parameterType="map"   resultMap="BaseResultMap">
        SELECT *  FROM  view_group_user2
        where project_id=#{record.projectId,jdbcType=INTEGER}
            and id=#{record.id,jdbcType=INTEGER}
            and user_type=#{record.userType,jdbcType=INTEGER}
            and del_flag=0
  </select>
  <select id="getGroupUsers"   parameterType="map"   resultMap="BaseResultMap">
        SELECT
          view_group_user2.id as id,
          view_group_user2.project_id,
          view_group_user2.group_name,
          `user`.id as user_id,
          view_group_user2.user_type as user_type,
          `user`.real_name,
          view_group_user2.content,
          view_group_user2.del_flag,
          view_group_user2.group_user_id
        FROM
        `user`
        left Join (
                select * from view_group_user2 where project_id=#{record.projectId,jdbcType=INTEGER}
                                                    and id=#{record.id,jdbcType=INTEGER}
                ) as view_group_user2
            ON `user`.id = view_group_user2.user_id
  </select>

</mapper>